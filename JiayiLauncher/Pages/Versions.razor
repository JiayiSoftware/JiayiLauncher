@page "/Versions"
@using JiayiLauncher.Features.Game
@using JiayiLauncher.Features.Versions
@using JiayiLauncher.Pages.Extra
@using JiayiLauncher.Utils

@inject NavigationManager NavigationManager

<div class="page-title">
    <h3>@Strings.VerManName</h3>
    <h3 class="version-list-title">@Strings.VerListName</h3>
</div>

<div class="versions-page">
    <div class="version-cards">
        @* simulates masonry layout *@
        <div class="cards-row">
            <div class="info-card">
                <h4>@Strings.VerManCurrentVersion</h4>
                <p>@_currentVersion</p>
                <i>@_installLocation</i>
            </div>

            <div class="info-card">
                <h4>@Strings.VerListName</h4>
                <JiayiButton Size="JiayiButton.ButtonSize.Small" OnClick="FullListClicked">@Strings.Open</JiayiButton>
                <i class="resize-tip">@Strings.VerManResizeTip</i>
                <i class="manage-tip">@Strings.VerManManageTip</i>
            </div>
        </div>

        <div class="cards-row">
            <div class="info-card">
                <h4>@Strings.VerManPopularVersions</h4>

                <ul class="popular-versions">
                    @if (_latestVersion != null)
                    {
                        <li class="popular-version">
                            <div class="popular-version-info">
                                <strong>@_latestVersion</strong>
                                <p>@Strings.VerManLatestVersion</p>
                            </div>

                            <JiayiButton Size="JiayiButton.ButtonSize.Small" 
                                         OnClick="() => GotoVersion(_popularVersions[2])">@Strings.View</JiayiButton>
                        </li>
                    }

                    <li class="popular-version">
                        <div class="popular-version-info">
                            <strong>1.18.12</strong>
                            <p>@Strings.VerManPopularAmongCommunity</p>
                        </div>

                        <JiayiButton Size="JiayiButton.ButtonSize.Small" 
                                     OnClick="() => GotoVersion(_popularVersions[0])">@Strings.View</JiayiButton>
                    </li>

                    <li class="popular-version">
                        <div class="popular-version-info">
                            <strong>1.16.40</strong>
                            <p>@Strings.VerManBestStableRelease</p>
                        </div>

                        <JiayiButton Size="JiayiButton.ButtonSize.Small"
                                     OnClick="() => GotoVersion(_popularVersions[1])">@Strings.View</JiayiButton>
                    </li>
                </ul>
            </div>
            
            <div class="info-card shader-card">
                <h4>@Strings.ShaderManName</h4>
                <i style="text-align: center; margin-bottom: 0.7rem;">@_shaderText</i>
                <JiayiButton Disabled="@_shadersDisabled" OnClick="ShadersClicked">@Strings.Open</JiayiButton>
            </div>
        </div>
    </div>
    
    <div class="version-list">
        @* only shows if the screen is wide enough *@
        <FullVersionList ShowTitle="false" />
    </div>
</div>

@code {
    private string _currentVersion = "...";
    private string _installLocation = "...";
    private string? _latestVersion;
    private string _shaderText = Strings.VerManShaderManagerText;
    private List<string> _popularVersions = new() { "1.18.12.1", "1.16.40.2" };

    private bool _shadersDisabled;

    protected override async Task OnInitializedAsync()
    {
        var packageData = Singletons.Get<PackageData>();
        var versionList = Singletons.Get<VersionList>();
        
        _currentVersion = await packageData.GetVersion();
        var location = await packageData.GetInstallLocation();

        _installLocation = location switch {
            InstallLocation.FromJiayi => Strings.InstallLocByJiayi,
            InstallLocation.MicrosoftStore => Strings.InstallLocFromStore,
            InstallLocation.OtherVersionManager => Strings.InstallLocExternalManager,
            InstallLocation.Unknown => Strings.InstallLocUnknown,
            _ => Strings.InstallLocUnknown
        };
        
        if (_currentVersion == Strings.Unknown)
        {
            _installLocation = Strings.InstallLocNotInstalled;
            _shadersDisabled = true;
        }

        var versions = await versionList.GetVersionList();
        // shave the last 2 characters off the version name as they're not shown in game
        _latestVersion = versions[0][..^2];
        _popularVersions.Add(versions[0]);
        
        if (_currentVersion != Strings.Unknown && versionList.CompareVersions("1.16.200.2", _currentVersion))
        {
            _shaderText = Strings.VerManShaderManagerVerTooLow;
            _shadersDisabled = true;
        }
        
        if (location == InstallLocation.MicrosoftStore)
        {
            _shaderText = Strings.VerManShaderManagerMSStore;
            _shadersDisabled = true;
        }
        
        await base.OnInitializedAsync();
    }

    private void FullListClicked()
    {
        NavigationManager.NavigateTo("/Versions/Full");
    }

    private void GotoVersion(string ver)
    {
        NavigationManager.NavigateTo($"/Versions/Full/{ver}");
    }

    private void ShadersClicked()
    {
        NavigationManager.NavigateTo("/Shaders");
    }

}