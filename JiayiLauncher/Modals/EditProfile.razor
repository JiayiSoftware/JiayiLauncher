@using JiayiLauncher.Features.Profiles
@using JiayiLauncher.Settings
@using System.IO
@using JiayiLauncher.Localization
@using JiayiLauncher.Utils;

<div class="edit">
    <div class="edit-name" style="margin-bottom: 1em">
        <p>@Strings.EditProfileNameProfile</p>
        <JiayiTextBox Placeholder="@Profile!.Name" @ref="_textBox" />
    </div>

    <JiayiButton OnClick="SaveClicked" Size="JiayiButton.ButtonSize.Small" Style="margin-bottom: 1em;">@Strings.Save</JiayiButton>

    @if (JiayiSettings.Instance.ProfileCollectionPath == string.Empty)
    {
        <br>
        <i style="color: var(--text-grayed); font-size: 14px">
            @Strings.EditProfileDefaultLocationNotice
        </i>
    }
</div>

@code {
    [Parameter]
    public Profile? Profile { get; set; }

    [CascadingParameter]
    private BlazoredModalInstance Modal { get; set; } = default!;

    private JiayiTextBox? _textBox;

    private async Task SaveClicked()
    {
        if (Profile == null || _textBox?.Value == null || _textBox?.Value?.Trim() == string.Empty || _textBox?.Value.Length >= 256) return;

        var log = Singletons.Get<Log>();
        
        var newName = _textBox!.Value?.Trim() ?? Profile.Name;

        if (Directory.Exists(Profile.Path))
        {
            var newPath = Profile.Path.Replace(Profile.Name, newName);
            if (Directory.Exists(newPath))
            {
                await Modal.CloseAsync(ModalResult.Cancel());
                log.Write("Profile", $"Directory already exists: {newPath}");
                return;
            }

            if (Profile.Path != newPath)
            {
                // Crash here 

                try
                {
                    Directory.Move(Profile.Path, newPath);
                    Profile.Path = newPath;
                }
                catch (Exception e)
                {
                    log.Write("EditProfile.SaveClicked", $"Could not move directory: {e}", Log.LogLevel.Error);
                }
            }
        }

        Profile.Name = newName;
        ProfileCollection.Current!.Add(Profile);

        await Modal.CloseAsync(ModalResult.Ok());
    }
}
